#!/bin/bash

# Script: Moodle--INSTALL
# Description: Downloads all the necessary assets to the WEB_DOCUMENTROOT.
#              It downloads the Moodle LMS, WIRIS Quizzes and WIRIS MathType 
#              plugins source code from github.  
# Params:
# - Moodle version, (using Moodle's github project branch nomenclature)
# - PHP version.
# - Development branch for MathType plugins.
# - Dev mode on?

echo "===================================================================================="
echo "=> Install is starting. wiris-moodle-docker: Docker Containers for Moodle Developers <="
echo "===================================================================================="


# Step01. Set up variables and paramaters. 
echo "=> 1/5: Setting up variables and paramaters"

# (parameter) Path to store the Moodle code.
if [ ! -d "$WEB_DOCUMENTROOT" ];
then
    echo '=> Error: WEB_DOCUMENTROOT environment variable is not set or not an existing directory.'
    exit 1
fi

# (parameter) Set up the Moodle version to download using the branch name convention.
if [ -z "$WIRIS_MOODLE_BRANCH" ];
then
    echo '=> Warning: WIRIS_MOODLE_BRANCH environment variable is not set. Setting default to "MOODLE_39_STABLE" for this session.'
    export WIRIS_MOODLE_BRANCH="MOODLE_39_STABLE" 
fi

# (parameter) The branch to download Moodle MathType plugins from.
if [ -z "$WIRIS_MOODLE_MATHTYPE_BRANCH" ];
then
    echo "=> Warning: WIRIS_MOODLE_MATHTYPE_BRANCH environment variable is not set. Setting default to 'main' for this session."
    export WIRIS_MOODLE_MATHTYPE_BRANCH="main"
else
    echo "=> Preparing to pull MathType Moodle plugins source code from '${WIRIS_MOODLE_MATHTYPE_BRANCH}' branch."
fi

# (parameter) Which mode to clone Moodle MathType plugins.
if [ -z "$WIRIS_MOODLE_MATHTYPE_DEV_MODE" ];
then
    echo '=> Warning: WIRIS_MOODLE_MATHTYPE_DEV_MODE environment variable is not set. Setting default to "on" for this session.'
    export WIRIS_MOODLE_MATHTYPE_DEV_MODE="off" 
fi

if [ ${WIRIS_MOODLE_MATHTYPE_DEV_MODE} = "on" ]; then
    WIRIS_GIT_TRANSPORT="git@github.com:wiris"
else
    WIRIS_GIT_TRANSPORT="https://github.com/wiris"
fi

# (Moodle-docker): where to download the code from; we use to have a fork.
MOODLE_DOCKER_SOURCE=https://github.com/moodlehq/moodle-docker.git

# (Moodle-docker) Set up path to Moodle code
export MOODLE_DOCKER_WWWROOT=${WEB_DOCUMENTROOT}/${WIRIS_MOODLE_BRANCH}

# Set up custom development variables:
# The branch to download Moodle Quizzes plugins from.
if [ -z "$WIRIS_MOODLE_QUIZZES_BRANCH" ];
then
    echo '=> Warning: WIRIS_MOODLE_QUIZZES_BRANCH environment variable is not set. Setting default to "main" for this session.'
    export WIRIS_MOODLE_QUIZZES_BRANCH="main"
else
    echo '=> Preparing to pull Quizzes Moodle plugins source code from '${WIRIS_MOODLE_QUIZZES_BRANCH}' branch.'
fi

# Using this workarond since bash version on MacOS, <4, does not support associative arrays 
# @see: https://stackoverflow.com/questions/6047648/associative-arrays-error-declare-a-invalid-option
WIRIS_MOODLE_QUIZZES_PLUGINS=(
    'moodle-local_wirisquizzes::local/wirisquizzes'
    'moodle-qtype_wq::question/type/wq'
    'moodle-qtype_truefalsewiris::question/type/truefalsewiris'
    'moodle-qtype_shortanswerwiris::question/type/shortanswerwiris'
    'moodle-qtype_multichoicewiris::question/type/multichoicewiris'
    'moodle-qtype_multianswerwiris::question/type/multianswerwiris'
    'moodle-qtype_matchwiris::question/type/matchwiris'
    'moodle-qtype_essaywiris::question/type/essaywiris'
)

# Get the version number of the moodle branch
MOODLE_VERSION=`echo ${WIRIS_MOODLE_BRANCH} | sed "s/MOODLE_//" | sed "s/_STABLE//"`
# Pad left tree 0 on the version number
if [ $WIRIS_MOODLE_BRANCH != "master" ]; then
    MOODLE_VERSION=$(printf %04d $MOODLE_VERSION)
else 
    MOODLE_VERSION=9999
fi

# Check if we are at a lower Moodle version than 4.0.1 to install Tiny, Tiny-legacy or both.
if [ $MOODLE_VERSION -lt "0401" -a $MOODLE_VERSION != "0000" ]; then
    WIRIS_MOODLE_MATHTYPE_PLUGINS=(
        'moodle-filter_wiris::filter/wiris'
        'moodle-atto_wiris::lib/editor/atto/plugins/wiris'
        'moodle-tinymce_tiny_mce_wiris::lib/editor/tinymce/plugins/tiny_mce_wiris'
    )
elif  [ $MOODLE_VERSION = "0401" ]; then
    WIRIS_MOODLE_MATHTYPE_PLUGINS=(
        'moodle-filter_wiris::filter/wiris'
        'moodle-atto_wiris::lib/editor/atto/plugins/wiris'
        'moodle-tinymce_tiny_mce_wiris::lib/editor/tinymce/plugins/tiny_mce_wiris'
        'moodle-tinymce6_wiris::lib/editor/tiny/plugins/wiris'
    )
else 
    WIRIS_MOODLE_MATHTYPE_PLUGINS=(
        'moodle-filter_wiris::filter/wiris'
        'moodle-atto_wiris::lib/editor/atto/plugins/wiris'
        'moodle-tinymce6_wiris::lib/editor/tiny/plugins/wiris'
    )
fi

# Step02. Setup and run 'moodle-docker'.
echo "=> 2/5: Downloading Moodle Docker containers"

# Clone Official Moodle-docker repository
if [ -d "moodle-docker" ]; then
    # Control will enter here if $DIRECTORY doesn't exists.
    cd moodle-docker

    if [ -d ".git" ]; then
        echo "=> Pulling Moodle-docker code..."
        git pull
        echo "=> Pulled Moodle-docker code."
    else
        cd ..
        echo "=> Cloning Moodle-docker code..."
        git clone ${MOODLE_DOCKER_SOURCE} 
        echo "=> Cloned Moodle-docker to ./moodle-docker."
    fi
else
    # Control will enter here if moodle-docker directory doesn't exists.
    echo "=> Cloning Moodle-docker code from scratch..."
    git clone ${MOODLE_DOCKER_SOURCE} 
    echo "=> Cloned Moodle-docker to ./moodle-docker."
fi

# Step03. Download Moodle from the Official Moodle repository.
echo "=> 3/5: Downloading Moodle ${WIRIS_MOODLE_BRANCH} to ${MOODLE_DOCKER_WWWROOT}/ ..."

# Clone Official Moodle repository
cd ${WEB_DOCUMENTROOT}
if [ -d "${WIRIS_MOODLE_BRANCH}" ]; then
  # Control will enter here if $DIRECTORY exists.
  cd ${WIRIS_MOODLE_BRANCH}
  if [ -d ".git" ]; then
    echo "=> Pulling Moodle code..."
    git checkout ${WIRIS_MOODLE_BRANCH} 
    git pull
    echo "=> Pulled code from ${WIRIS_MOODLE_BRANCH} to ${MOODLE_DOCKER_WWWROOT}/."
  else
    echo "=> Cloning Moodle code..."
    git clone -b ${WIRIS_MOODLE_BRANCH} https://github.com/moodle/moodle.git ${WIRIS_MOODLE_BRANCH}
    echo "=> Cloned code from ${WIRIS_MOODLE_BRANCH} to ${MOODLE_DOCKER_WWWROOT}/."
  fi
else
    echo "=> Cloning Moodle code from scratch..."
    git clone -b ${WIRIS_MOODLE_BRANCH} https://github.com/moodle/moodle.git ${WIRIS_MOODLE_BRANCH}
    echo "=> Cloned code from ${WIRIS_MOODLE_BRANCH} to ${MOODLE_DOCKER_WWWROOT}/."
fi

# Step04. Download WIRIS MathType plugins in development mode.
echo "=> 4/5: Downloading WIRIS MathType plugins to ${MOODLE_DOCKER_WWWROOT}/ ..."
# Workaround to support associative arrays on bash <4 ( MacOSx )
for plugin in "${WIRIS_MOODLE_MATHTYPE_PLUGINS[@]}" ; do
    MATHTYPE_PLUGIN="${plugin%%::*}"
    MATHTYPE_PLUGIN_TARGET="${plugin##*::}"
    if [ -d "${MOODLE_DOCKER_WWWROOT}/${MATHTYPE_PLUGIN_TARGET}" ]; then
        echo "=> Pulling $MATHTYPE_PLUGIN..."
        cd ${MOODLE_DOCKER_WWWROOT}/${MATHTYPE_PLUGIN_TARGET}
        git checkout ${WIRIS_MOODLE_MATHTYPE_BRANCH} 
        git pull 
        cd ${MOODLE_DOCKER_WWWROOT}
    else
        echo "=> Cloning $MATHTYPE_PLUGIN..."
        git clone -b ${WIRIS_MOODLE_MATHTYPE_BRANCH} ${WIRIS_GIT_TRANSPORT}/$MATHTYPE_PLUGIN ${MOODLE_DOCKER_WWWROOT}/${MATHTYPE_PLUGIN_TARGET}
    fi
done

# Step05. Download WIRIS Quizzes plugins.
echo "=> 5/5: Downloading WIRIS Quizzes plugins to ${MOODLE_DOCKER_WWWROOT}/ ..."
# Workaround to support associative arrays on bash <4 ( MacOSx )
for plugin in "${WIRIS_MOODLE_QUIZZES_PLUGINS[@]}" ; do
    QUIZZES_PLUGIN="${plugin%%::*}"
    QUIZZES_PLUGIN_TARGET="${plugin##*::}"
    if [ -d "${MOODLE_DOCKER_WWWROOT}/${QUIZZES_PLUGIN_TARGET}" ]; then
        echo "=> Pulling $QUIZZES_PLUGIN..."
        cd ${MOODLE_DOCKER_WWWROOT}/${QUIZZES_PLUGIN_TARGET}
        git checkout ${WIRIS_MOODLE_QUIZZES_BRANCH} 
        git pull 
        cd ${MOODLE_DOCKER_WWWROOT}
    else
        echo "=> Cloning $QUIZZES_PLUGIN..."
        git clone -b ${WIRIS_MOODLE_QUIZZES_BRANCH} ${WIRIS_GIT_TRANSPORT}/$QUIZZES_PLUGIN ${MOODLE_DOCKER_WWWROOT}/$QUIZZES_PLUGIN_TARGET
    fi
done

echo "======================================================================================="
echo "=> Install is finished. Run the 'start' command to start using your Moodle instance. <="
echo "======================================================================================="

